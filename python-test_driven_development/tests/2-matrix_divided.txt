>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Cas normaux
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]
>>> matrix_divided([[1.5, 2.5], [3.0, 4.0]], 2)
[[0.75, 1.25], [1.5, 2.0]]
>>> matrix_divided([[2, 4], [6, 8]], 2.0)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[1, 2], [3, 4]], 3)
[[0.33, 0.67], [1.0, 1.33]]
>>> matrix_divided([[1, 2, 3]], 2)
[[0.5, 1.0, 1.5]]

# Matrice vide et ligne vide
>>> matrix_divided([], 2)
[]
>>> matrix_divided([[]], 2)
[[]]

# Test d'intégrité (la matrice d'origine ne change pas)
>>> m = [[1, 2], [3, 4]]
>>> _ = matrix_divided(m, 2)
>>> m
[[1, 2], [3, 4]]

# Erreurs de structure
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, "a"], [3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Erreurs sur le diviseur
>>> matrix_divided([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Cas limites
>>> matrix_divided([[0, 0], [0, 0]], 2)
[[0.0, 0.0], [0.0, 0.0]]
>>> matrix_divided([[1000000, 2000000]], 1000000)
[[1.0, 2.0]]
>>> matrix_divided([[1]], 1)
[[1.0]]
>>> matrix_divided([[1.111, 2.222]], 1)
[[1.11, 2.22]]

# Matrice avec float et int mélangés
>>> matrix_divided([[1, 2.5], [3, 4.75]], 2)
[[0.5, 1.25], [1.5, 2.38]]

# Matrice avec une seule ligne vide
>>> matrix_divided([[]], 2)
[[]]
